# bot/modules/alliance_war.py

import random
from datetime import datetime, timedelta

class AllianceWar:
    def __init__(self, alliance1, alliance2, start_time, duration):
        self.alliance1 = alliance1
        self.alliance2 = alliance2
        self.start_time = start_time
        self.end_time = start_time + timedelta(hours=duration)
        self.score = {alliance1: 0, alliance2: 0}
        self.participants = {alliance1: set(), alliance2: set()}

    def is_active(self):
        return datetime.now() <= self.end_time

    def join(self, player_id, alliance):
        if alliance in self.participants:
            self.participants[alliance].add(player_id)

    def attack(self, attacker_id, defender_id):
        # Check if both players are in participating alliances
        attacker_alliance = None
        defender_alliance = None
        for faction in factions.values():
            if attacker_id in faction.members:
                attacker_alliance = faction.name
            if defender_id in faction.members:
                defender_alliance = faction.name

        if attacker_alliance not in self.participants or defender_alliance not in self.participants:
            return "Attack outside of alliance war parameters."

        # Simulate battle result (simplified)
        result = random.choice(["attack", "defense"])
        if result == "attack":
            self.score[attacker_alliance] += 1
            return f"Attack successful! {attacker_alliance} scores a point!"
        else:
            self.score[defender_alliance] += 1
            return f"Defense successful! {defender_alliance} scores a point!"

    def get_status(self):
        return {
            "alliance1": self.alliance1,
            "alliance2": self.alliance2,
            "start_time": self.start_time,
            "end_time": self.end_time,
            "score": self.score,
            "participants": self.participants
        }

current_war = None

def start_war(alliance1, alliance2, duration=24):
    global current_war
    current_war = AllianceWar(alliance1, alliance2, datetime.now(), duration)
    return current_war

def get_current_war():
    return current_war