# handlers/defensive_structures.py

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from modules.defensive_structures import DefensiveStructure
from utils.format import section_header

# Define available defensive structures
structures = {
    "bunker": DefensiveStructure("Bunker", "Provides moderate defense against ground attacks", 1.2, {'credits': 300, 'minerals': 150}),
    "shield_generator": DefensiveStructure("Shield Generator", "Creates an energy shield that reduces incoming damage", 1.3, {'credits': 500, 'minerals': 200, 'energy': 100}),
    "missile_turret": DefensiveStructure("Missile Turret", "Automated turret that targets airborne and ground units", 1.1, {'credits': 400, 'minerals': 250})
}

async def handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    uid = str(update.effective_user.id)
    args = context.args

    if not args:
        kb = []
        for structure_name, structure in structures.items():
            kb.append([InlineKeyboardButton(
                f"Build {structure.name}",
                callback_data=f"build_{structure_name}"
            )])

        kb.append([InlineKeyboardButton("Close", callback_data="close")])

        await update.message.reply_text(
            f"{section_header('DEFENSIVE STRUCTURES', '🛡️')}\n\n"
            "Select a defensive structure to build:\n\n" +
            "\n".join([f"{name}: {structure.description} - Defense: {structure.defense_bonus}x" for name, structure in structures.items()]),
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup(kb)
        )
        return

    action = args[0].lower()
    if action == "build" and len(args) > 1:
        structure_name = args[1].lower()
        if structure_name in structures:
            structure = structures[structure_name]
            # Deduct resources
            player_data = load_player_data(uid)
            for resource, amount in structure.resource_cost.items():
                if resource == 'credits':
                    player_data['credits'] -= amount
                if resource == 'minerals':
                    player_data['minerals'] -= amount
                if resource == 'energy':
                    player_data['energy'] -= amount
            save_player_data(uid, player_data)

            await update.message.reply_text(
                f"🛡️ *Structure Built!* 🛡️\n\n"
                f"You've constructed a {structure.name}!\n"
                f"Defense Bonus: {structure.defense_bonus}x",
                parse_mode="Markdown"
            )
        else:
            await update.message.reply_text(
                "Structure not found. Use /defensive to see available options.",
                parse_mode="Markdown"
            )